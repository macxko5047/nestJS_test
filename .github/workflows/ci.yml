name: Build and Deploy Docker image

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted # หรือ ubuntu-latest ถ้าไม่ได้ใช้ self-hosted runner
    environment:
      name: nestJS # <<-- ชื่อต้องตรงกับ Environment ที่สร้างไว้
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from secrets
        run: |
          "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" | Out-File -Encoding utf8 -Append .env
          "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" | Out-File -Encoding utf8 -Append .env
          "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" | Out-File -Encoding utf8 -Append .env
          "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" | Out-File -Encoding utf8 -Append .env
          "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" | Out-File -Encoding utf8 -Append .env
          "API_KEY=${{ secrets.API_KEY }}" | Out-File -Encoding utf8 -Append .env
          "PORT=3000" | Out-File -Encoding utf8 -Append .env
        shell: powershell

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
        shell: powershell

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
        shell: powershell

      # รัน Docker container ใหม่ (ลบอันเก่าถ้ามี) -- ไม่มี error ถ้าไม่มี container เดิม
      - name: Run Docker container
        run: |
          # Stop old container if exists
          $cid = docker ps -aq -f name=nestjs-api
          if ($cid) {
          docker stop $cid
          docker rm $cid
          }
          docker run -d --name nestjs-api -p 3001:3000 ghcr.io/${{ github.repository }}:latest
        shell: powershell
